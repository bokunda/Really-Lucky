// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReallyLuckyBackend.Data;

namespace ReallyLuckyBackend.Migrations
{
    [DbContext(typeof(ReallyLuckyContext))]
    partial class ReallyLuckyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("ReallyLuckyBackend.Data.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ImgSrc");

                    b.Property<string>("Name");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ReallyLuckyBackend.Data.LuckySixBalls", b =>
                {
                    b.Property<int>("LuckySixBallsId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Color");

                    b.Property<int>("Number");

                    b.Property<int>("RoundId");

                    b.Property<long?>("RoundId1");

                    b.Property<long?>("TicketId");

                    b.HasKey("LuckySixBallsId");

                    b.HasIndex("RoundId1");

                    b.HasIndex("TicketId");

                    b.ToTable("LuckySixBalls");
                });

            modelBuilder.Entity("ReallyLuckyBackend.Data.Round", b =>
                {
                    b.Property<long>("RoundId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTimeEnded");

                    b.Property<DateTime>("DateTimeStarted");

                    b.Property<int>("GameId");

                    b.HasKey("RoundId");

                    b.HasIndex("GameId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("ReallyLuckyBackend.Data.Ticket", b =>
                {
                    b.Property<long>("TicketId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("RoundId");

                    b.Property<long?>("RoundId1");

                    b.Property<int>("Status");

                    b.HasKey("TicketId");

                    b.HasIndex("RoundId1");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("ReallyLuckyBackend.Data.LuckySixBalls", b =>
                {
                    b.HasOne("ReallyLuckyBackend.Data.Round", "Round")
                        .WithMany("LuckySixBalls")
                        .HasForeignKey("RoundId1");

                    b.HasOne("ReallyLuckyBackend.Data.Ticket")
                        .WithMany("LuckySixBalls")
                        .HasForeignKey("TicketId");
                });

            modelBuilder.Entity("ReallyLuckyBackend.Data.Round", b =>
                {
                    b.HasOne("ReallyLuckyBackend.Data.Game", "Game")
                        .WithMany("Rounds")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ReallyLuckyBackend.Data.Ticket", b =>
                {
                    b.HasOne("ReallyLuckyBackend.Data.Round", "Round")
                        .WithMany()
                        .HasForeignKey("RoundId1");
                });
#pragma warning restore 612, 618
        }
    }
}
